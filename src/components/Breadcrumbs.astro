---
import { getRelativeLocaleUrl } from "astro:i18n";

// Get current locale and path segments, filtering out empty strings
const pathSegments = Astro.url.pathname.split('/').filter(Boolean);
const currentLocale = Astro.currentLocale || 'en';

// Remove current url path, remove trailing slash if exists
// For other locales, remove the locale segment
const currentUrlPath = Astro.url.pathname
  .replace(/\/+$/, "")
  .replace(new RegExp(`^/${currentLocale}`), "");

// Get url array from path, filtering out empty strings
// eg: /tags/tailwindcss => ['tags', 'tailwindcss']
const breadcrumbList = currentUrlPath.split("/").filter(Boolean);

// if breadcrumb is Home > Posts > 1 <etc>
// replace Posts with Posts (page number)
breadcrumbList[0] === "posts" &&
  breadcrumbList.splice(0, 2, `Posts (page ${breadcrumbList[1] || 1})`);

// if breadcrumb is Home > Tags > [tag] > [page] <etc>
// replace [tag] > [page] with [tag] (page number)
breadcrumbList[0] === "tags" &&
  !isNaN(Number(breadcrumbList[2])) &&
  breadcrumbList.splice(
    1,
    3,
    `${breadcrumbList[1]} ${
      Number(breadcrumbList[2]) === 1 ? "" : "(page " + breadcrumbList[2] + ")"
    }`
  );

// Helper function to generate localized URLs using Astro's utility
const getLocalizedUrl = (path: string) => {
  return getRelativeLocaleUrl(currentLocale, path);
};
---

<nav class="breadcrumb" aria-label="breadcrumb">
  <ul>
    <li>
      <a href={getLocalizedUrl("/")}>Home</a>
      <span aria-hidden="true">&raquo;</span>
    </li>
    {
      breadcrumbList.map((breadcrumb, index) =>
        index + 1 === breadcrumbList.length ? (
          <li>
            <span
              class={`${index > 0 ? "lowercase" : "capitalize"}`}
              aria-current="page"
            >
              {/* make the last part lowercase in Home > Tags > some-tag */}
              {decodeURIComponent(breadcrumb)}
            </span>
          </li>
        ) : (
          <li>
            <a href={getLocalizedUrl(`/${breadcrumb}/`)}>{breadcrumb}</a>
            <span aria-hidden="true">&raquo;</span>
          </li>
        )
      )
    }
  </ul>
</nav>

<style>
  .breadcrumb {
    @apply mx-auto mb-1 mt-8 w-full max-w-3xl px-4;
  }
  .breadcrumb ul li {
    @apply inline;
  }
  .breadcrumb ul li a {
    @apply capitalize opacity-70;
  }
  .breadcrumb ul li span {
    @apply opacity-70;
  }
  .breadcrumb ul li:not(:last-child) a {
    @apply hover:opacity-100;
  }
</style>
