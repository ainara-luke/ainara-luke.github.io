---
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import { WEDDINGCONFIG } from "../../config";

export async function getStaticPaths() {
  return WEDDINGCONFIG.invites.map(invite => ({
    params: { hash: invite.hash },
    props: {
      invite_key: invite.invite_key,
      guests: invite.guests
    }
  }));
}

const { invite_key, guests } = Astro.props;
---

<Layout title={`RSVP - ${invite_key}`}>
  <Header />
  <main id="main-content">
    <section id="rsvp">
      <h1>RSVP</h1>
      <div id="rsvpContainer">
        <p class="mb-4">Please confirm your attendance below:</p>

        <form id="rsvpForm" class="space-y-4">
          <!-- Hidden field for invite key -->
          <input type="hidden" name="invite_key" value={invite_key} />

          <!-- Guest checkboxes -->
          <div class="space-y-2">
            {guests.map(guest => (
              <div class="flex items-center">
                <input
                  type="checkbox"
                  id={guest.name}
                  name="guest_names"
                  value={guest.name}
                  class="mr-2"
                  style="cursor: pointer"
                />
                <label for={guest.name} style="cursor: pointer">{guest.name}</label>
              </div>
            ))}
          </div>

          <!-- Notes field -->
          <div>
            <label for="notes" class="block mb-2">Additional Notes:</label>
            <textarea
              id="notes"
              name="notes"
              rows="3"
              class="w-full p-2 border rounded"
            ></textarea>
          </div>

          <!-- Submit button -->
          <button
            type="submit"
            class="bg-skin-accent text-skin-inverted px-4 py-2 rounded"
          >
            Submit RSVP
          </button>
        </form>
      </div>
    </section>
  </main>
</Layout>

<style>
    #rsvp {
        @apply pb-6 pt-8;
    }
    #rsvp h1 {
        @apply my-4 inline-block text-2xl font-bold sm:my-8 sm:text-3xl;
    }
    #rsvp p {
        @apply my-2;
    }
</style>

<script define:vars={{ formId: "1FAIpQLSdjXBjDMCrDuUKwp5sA3_w3MeRDC5Z_kQ-2gT3eUcTEs7qzLg" }}>
  const form = document.getElementById('rsvpForm');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData();

    // Get checked guests
    const checkedBoxes = form.querySelectorAll('input[name="guest_names"]:checked');
    const guestNames = Array.from(checkedBoxes).map(box => box.value);

    // Gather form data
    formData.append('entry.1910503431', form.querySelector('input[name="invite_key"]').value);
    formData.append('entry.1715372634', guestNames.length.toString());
    formData.append('entry.1831974976', JSON.stringify(guestNames));
    formData.append('entry.391972157', form.querySelector('#notes').value);

    try {
      const response = await fetch(
        `https://docs.google.com/forms/d/e/${formId}/formResponse`,
        {
          method: 'POST',
          mode: 'no-cors',
          body: formData
        }
      );

      // Replace the entire container instead of just the form
      document.getElementById('rsvpContainer').innerHTML =
        '<div class="text-green-600">Thank you for your RSVP!</div>';
    } catch (error) {
      console.error('Error:', error);
      document.getElementById('rsvpContainer').innerHTML +=
        '<div class="text-red-600">There was an error submitting your RSVP. Please try again later.</div>';
    }
  });
</script>